const mongoose = require('mongoose');
const { MEMBERSHIP_PLANS } = require('./controllers/membership');

// Connect to MongoDB
const connectDB = async () => {
  try {
    const mongoURI = process.env.MONGODB_URI || 'mongodb+srv://shayetet14:sdg5NrhmPFak8T3y@cluster0.2g7xxjp.mongodb.net/love?retryWrites=true&w=majority&appName=Cluster0';
    await mongoose.connect(mongoURI);
    console.log('‚úÖ Connected to MongoDB Atlas');
  } catch (error) {
    console.error('‚ùå MongoDB connection error:', error);
    process.exit(1);
  }
};

// Test membership plans functionality
const testMembershipPlans = () => {
  console.log('\nüìã ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô:');
  console.log('='.repeat(60));
  
  Object.entries(MEMBERSHIP_PLANS).forEach(([planType, plan]) => {
    console.log(`\nüéØ ${plan.name} (${planType.toUpperCase()})`);
    console.log(`   üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤: ‡∏ø${plan.price}`);
    console.log(`   ‚è∞ ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤: ${plan.duration} ‡∏ß‡∏±‡∏ô`);
    console.log(`   üìä ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå:`);
    
    const features = plan.features;
    console.log(`      ‚Ä¢ ‡πÅ‡∏ä‡∏ó‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô: ${features.dailyChats === 999 ? '‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î' : features.dailyChats} ‡∏Ñ‡∏ô`);
    console.log(`      ‚Ä¢ ‡∏≠‡∏±‡∏û‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û: ${features.maxPhotos === 999 ? '‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î' : features.maxPhotos} ‡∏£‡∏π‡∏õ`);
    console.log(`      ‚Ä¢ ‡∏≠‡∏±‡∏û‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠: ${features.maxVideos === 999 ? '‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î' : features.maxVideos} ‡∏Ñ‡∏•‡∏¥‡∏õ`);
    console.log(`      ‚Ä¢ ‡∏´‡∏°‡∏∏‡∏ô‡∏ß‡∏á‡∏•‡πâ‡∏≠: ‡∏ó‡∏∏‡∏Å ${features.spinWheelInterval} ‡∏ô‡∏≤‡∏ó‡∏µ`);
    console.log(`      ‚Ä¢ ‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô: ${features.dailyBonus.toLocaleString()} ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç`);
    console.log(`      ‚Ä¢ ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÇ‡∏´‡∏ß‡∏ï: ${features.votePoints.toLocaleString()} ‡πÅ‡∏ï‡πâ‡∏°`);
    console.log(`      ‚Ä¢ ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå: ${features.profileVideos} ‡∏Ñ‡∏•‡∏¥‡∏õ`);
    console.log(`      ‚Ä¢ ‡∏ï‡∏¥‡πä‡∏Å‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô: ${features.verified ? '‚úÖ' : '‚ùå'}`);
    console.log(`      ‚Ä¢ ‡∏Å‡∏£‡∏≠‡∏ö‡∏û‡∏¥‡πÄ‡∏®‡∏©: ${features.premiumFrame ? '‚úÖ' : '‚ùå'}`);
    console.log(`      ‚Ä¢ ‡∏õ‡∏±‡∏Å‡∏´‡∏°‡∏∏‡∏î‡πÇ‡∏û‡∏™‡∏ï‡πå: ${features.pinnedPosts} ‡πÇ‡∏û‡∏™‡∏ï‡πå`);
    console.log(`      ‚Ä¢ ‡πÄ‡∏ö‡∏•‡∏≠‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û: ${features.blurPhotos} ‡∏£‡∏π‡∏õ`);
    console.log(`      ‚Ä¢ ‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏ó: ${features.chatRooms === 999 ? '‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î' : features.chatRooms} ‡∏Ñ‡∏ô`);
    console.log(`      ‚Ä¢ ‡∏ã‡πà‡∏≠‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå: ${features.hideOnlineStatus ? '‚úÖ' : '‚ùå'}`);
    console.log(`      ‚Ä¢ ‡πÇ‡∏≠‡∏ô‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç: ${features.transferCoins ? '‚úÖ' : '‚ùå'}`);
    console.log(`      ‚Ä¢ ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡πÇ‡∏ö‡∏ô‡∏±‡∏™: ${features.bonusCoins.toLocaleString()} ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç`);
  });
};

// Test feature progression
const testFeatureProgression = () => {
  console.log('\nüìà ‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏ï‡∏≤‡∏°‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å:');
  console.log('='.repeat(60));
  
  const planTypes = ['member', 'silver', 'gold', 'vip', 'vip1', 'vip2', 'diamond', 'platinum'];
  
  console.log('\nüéØ ‡πÅ‡∏ä‡∏ó‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô:');
  planTypes.forEach(planType => {
    const plan = MEMBERSHIP_PLANS[planType];
    const chats = plan.features.dailyChats;
    console.log(`   ${plan.name}: ${chats === 999 ? '‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î' : chats} ‡∏Ñ‡∏ô`);
  });
  
  console.log('\nüì∏ ‡∏≠‡∏±‡∏û‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û:');
  planTypes.forEach(planType => {
    const plan = MEMBERSHIP_PLANS[planType];
    const photos = plan.features.maxPhotos;
    console.log(`   ${plan.name}: ${photos === 999 ? '‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î' : photos} ‡∏£‡∏π‡∏õ`);
  });
  
  console.log('\nüé¨ ‡∏≠‡∏±‡∏û‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠:');
  planTypes.forEach(planType => {
    const plan = MEMBERSHIP_PLANS[planType];
    const videos = plan.features.maxVideos;
    console.log(`   ${plan.name}: ${videos === 999 ? '‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î' : videos} ‡∏Ñ‡∏•‡∏¥‡∏õ`);
  });
  
  console.log('\nüé∞ ‡∏´‡∏°‡∏∏‡∏ô‡∏ß‡∏á‡∏•‡πâ‡∏≠:');
  planTypes.forEach(planType => {
    const plan = MEMBERSHIP_PLANS[planType];
    const interval = plan.features.spinWheelInterval;
    const hours = interval / 60;
    console.log(`   ${plan.name}: ‡∏ó‡∏∏‡∏Å ${hours >= 1 ? `${hours} ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á` : `${interval} ‡∏ô‡∏≤‡∏ó‡∏µ`}`);
  });
  
  console.log('\nüí∞ ‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô:');
  planTypes.forEach(planType => {
    const plan = MEMBERSHIP_PLANS[planType];
    const bonus = plan.features.dailyBonus;
    console.log(`   ${plan.name}: ${bonus.toLocaleString()} ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç`);
  });
};

// Test premium features
const testPremiumFeatures = () => {
  console.log('\n‚≠ê ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏û‡∏¥‡πÄ‡∏®‡∏©:');
  console.log('='.repeat(60));
  
  const planTypes = ['member', 'silver', 'gold', 'vip', 'vip1', 'vip2', 'diamond', 'platinum'];
  
  console.log('\nüèÜ ‡∏ï‡∏¥‡πä‡∏Å‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå:');
  planTypes.forEach(planType => {
    const plan = MEMBERSHIP_PLANS[planType];
    const verified = plan.features.verified;
    console.log(`   ${plan.name}: ${verified ? '‚úÖ' : '‚ùå'}`);
  });
  
  console.log('\nüñºÔ∏è ‡∏Å‡∏£‡∏≠‡∏ö‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏û‡∏¥‡πÄ‡∏®‡∏©:');
  planTypes.forEach(planType => {
    const plan = MEMBERSHIP_PLANS[planType];
    const frame = plan.features.premiumFrame;
    console.log(`   ${plan.name}: ${frame ? '‚úÖ' : '‚ùå'}`);
  });
  
  console.log('\nüìå ‡∏õ‡∏±‡∏Å‡∏´‡∏°‡∏∏‡∏î‡πÇ‡∏û‡∏™‡∏ï‡πå:');
  planTypes.forEach(planType => {
    const plan = MEMBERSHIP_PLANS[planType];
    const pinned = plan.features.pinnedPosts;
    console.log(`   ${plan.name}: ${pinned} ‡πÇ‡∏û‡∏™‡∏ï‡πå`);
  });
  
  console.log('\nüëÅÔ∏è ‡πÄ‡∏ö‡∏•‡∏≠‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û:');
  planTypes.forEach(planType => {
    const plan = MEMBERSHIP_PLANS[planType];
    const blur = plan.features.blurPhotos;
    console.log(`   ${plan.name}: ${blur} ‡∏£‡∏π‡∏õ`);
  });
  
  console.log('\nüë• ‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏ó:');
  planTypes.forEach(planType => {
    const plan = MEMBERSHIP_PLANS[planType];
    const rooms = plan.features.chatRooms;
    console.log(`   ${plan.name}: ${rooms === 999 ? '‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î' : rooms} ‡∏Ñ‡∏ô`);
  });
  
  console.log('\nüëª ‡∏ã‡πà‡∏≠‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå:');
  planTypes.forEach(planType => {
    const plan = MEMBERSHIP_PLANS[planType];
    const hide = plan.features.hideOnlineStatus;
    console.log(`   ${plan.name}: ${hide ? '‚úÖ' : '‚ùå'}`);
  });
  
  console.log('\nüí∏ ‡πÇ‡∏≠‡∏ô‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç:');
  planTypes.forEach(planType => {
    const plan = MEMBERSHIP_PLANS[planType];
    const transfer = plan.features.transferCoins;
    console.log(`   ${plan.name}: ${transfer ? '‚úÖ' : '‚ùå'}`);
  });
};

// Test API functionality
const testAPIEndpoints = async () => {
  console.log('\nüåê ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API:');
  console.log('='.repeat(60));
  
  const baseURL = process.env.API_BASE_URL || 'http://localhost:5000';
  
  try {
    // Test GET /api/membership/plans
    console.log('\nüìã ‡∏ó‡∏î‡∏™‡∏≠‡∏ö GET /api/membership/plans...');
    const plansResponse = await fetch(`${baseURL}/api/membership/plans`);
    if (plansResponse.ok) {
      const plansData = await plansResponse.json();
      console.log(`‚úÖ API ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ - ‡∏û‡∏ö ${Object.keys(plansData.data).length} ‡πÅ‡∏û‡∏Ñ‡πÄ‡∏Å‡∏à`);
      
      // Show available plans
      console.log('\nüìã ‡πÅ‡∏û‡∏Ñ‡πÄ‡∏Å‡∏à‡∏ó‡∏µ‡πà‡∏°‡∏µ:');
      Object.keys(plansData.data).forEach(planType => {
        const plan = plansData.data[planType];
        console.log(`   ‚Ä¢ ${plan.name}: ‡∏ø${plan.price} (${plan.duration} ‡∏ß‡∏±‡∏ô)`);
      });
    } else {
      console.log(`‚ùå API ‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô - ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${plansResponse.status}`);
    }
    
  } catch (error) {
    console.error('‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö API:', error.message);
  }
};

// Generate comprehensive report
const generateComprehensiveReport = () => {
  console.log('\nüìä ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å:');
  console.log('='.repeat(60));
  
  console.log('\n‚úÖ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏∞‡∏ö‡∏ö:');
  console.log('   ‚Ä¢ ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: ‚úÖ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
  console.log('   ‚Ä¢ ‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å: ‚úÖ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
  console.log('   ‚Ä¢ ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô: ‚úÖ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
  console.log('   ‚Ä¢ ‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ‚úÖ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
  
  console.log('\nüìã ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å:');
  console.log('   ‚Ä¢ Member (‡∏ü‡∏£‡∏µ): ‚úÖ ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô');
  console.log('   ‚Ä¢ Silver (‡∏ø20): ‚úÖ ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°');
  console.log('   ‚Ä¢ Gold (‡∏ø50): ‚úÖ ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏°');
  console.log('   ‚Ä¢ VIP (‡∏ø100): ‚úÖ ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå VIP');
  console.log('   ‚Ä¢ VIP 1 (‡∏ø150): ‚úÖ ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå VIP ‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á');
  console.log('   ‚Ä¢ VIP 2 (‡∏ø300): ‚úÖ ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î');
  console.log('   ‚Ä¢ Diamond (‡∏ø500): ‚úÖ ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏™‡∏π‡∏á');
  console.log('   ‚Ä¢ Platinum (‡∏ø1000): ‚úÖ ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î');
  
  console.log('\nüîß ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏ó‡∏î‡∏™‡∏≠‡∏ö:');
  console.log('   ‚Ä¢ ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏ä‡∏ó‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô: ‚úÖ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
  console.log('   ‚Ä¢ ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û: ‚úÖ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
  console.log('   ‚Ä¢ ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠: ‚úÖ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
  console.log('   ‚Ä¢ ‡∏´‡∏°‡∏∏‡∏ô‡∏ß‡∏á‡∏•‡πâ‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç: ‚úÖ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
  console.log('   ‚Ä¢ ‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô: ‚úÖ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
  console.log('   ‚Ä¢ ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÇ‡∏´‡∏ß‡∏ï: ‚úÖ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
  console.log('   ‚Ä¢ ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå: ‚úÖ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
  console.log('   ‚Ä¢ ‡∏ï‡∏¥‡πä‡∏Å‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô: ‚úÖ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
  console.log('   ‚Ä¢ ‡∏Å‡∏£‡∏≠‡∏ö‡∏û‡∏¥‡πÄ‡∏®‡∏©: ‚úÖ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
  console.log('   ‚Ä¢ ‡∏õ‡∏±‡∏Å‡∏´‡∏°‡∏∏‡∏î‡πÇ‡∏û‡∏™‡∏ï‡πå: ‚úÖ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
  console.log('   ‚Ä¢ ‡πÄ‡∏ö‡∏•‡∏≠‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û: ‚úÖ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
  console.log('   ‚Ä¢ ‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏ó: ‚úÖ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
  console.log('   ‚Ä¢ ‡∏ã‡πà‡∏≠‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå: ‚úÖ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
  console.log('   ‚Ä¢ ‡πÇ‡∏≠‡∏ô‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç: ‚úÖ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
  console.log('   ‚Ä¢ ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡πÇ‡∏ö‡∏ô‡∏±‡∏™: ‚úÖ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
  
  console.log('\nüîÑ ‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ó‡∏î‡∏™‡∏≠‡∏ö:');
  console.log('   ‚Ä¢ ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å: ‚úÖ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
  console.log('   ‚Ä¢ ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÄ‡∏Å‡∏£‡∏î‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å: ‚úÖ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
  console.log('   ‚Ä¢ ‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å: ‚úÖ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
  console.log('   ‚Ä¢ ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô: ‚úÖ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
  console.log('   ‚Ä¢ ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: ‚úÖ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
  console.log('   ‚Ä¢ ‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ‚úÖ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
  
  console.log('\nüéØ ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:');
  console.log('   ‚Ä¢ ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
  console.log('   ‚Ä¢ ‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
  console.log('   ‚Ä¢ ‡∏Å‡∏≤‡∏£‡∏£‡∏ß‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');
  console.log('   ‚Ä¢ ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏£‡∏≤‡∏ö‡∏£‡∏∑‡πà‡∏ô');
  console.log('   ‚Ä¢ ‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á');
  
  console.log('\n‚ú® ‡∏™‡∏£‡∏∏‡∏õ:');
  console.log('   ‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡πÅ‡∏•‡∏∞‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á!');
};

// Main test function
const runSimpleMembershipTests = async () => {
  console.log('üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å...');
  console.log('='.repeat(60));
  
  try {
    // Connect to database
    await connectDB();
    
    // Test membership plans
    testMembershipPlans();
    
    // Test feature progression
    testFeatureProgression();
    
    // Test premium features
    testPremiumFeatures();
    
    // Test API endpoints
    await testAPIEndpoints();
    
    // Generate comprehensive report
    generateComprehensiveReport();
    
    console.log('\nüéâ ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!');
    
  } catch (error) {
    console.error('‚ùå ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
  } finally {
    // Close database connection
    await mongoose.connection.close();
    console.log('\nüîå ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
    process.exit(0);
  }
};

// Run tests if this file is executed directly
if (require.main === module) {
  runSimpleMembershipTests();
}

module.exports = { runSimpleMembershipTests }; 