const mongoose = require('mongoose');
const bcrypt = require('bcryptjs');
const User = require('./models/User');

// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏∏‡πà‡∏°
const thaiFirstNames = {
  male: [
    '‡∏™‡∏°‡∏ä‡∏≤‡∏¢', '‡∏™‡∏°‡∏®‡∏±‡∏Å‡∏î‡∏¥‡πå', '‡∏™‡∏°‡∏û‡∏á‡∏©‡πå', '‡∏™‡∏°‡∏´‡∏°‡∏≤‡∏¢', '‡∏ß‡∏¥‡∏ä‡∏±‡∏¢', '‡∏ß‡∏¥‡πÇ‡∏£‡∏à‡∏ô‡πå', '‡∏õ‡∏£‡∏∞‡∏¢‡∏∏‡∏ó‡∏ò‡πå', '‡∏õ‡∏£‡∏∞‡∏ß‡∏¥‡∏ó‡∏¢‡πå', 
    '‡πÑ‡∏û‡πÇ‡∏£‡∏à‡∏ô‡πå', '‡∏ò‡∏µ‡∏£‡∏û‡∏á‡∏©‡πå', '‡∏ò‡∏ô‡∏Å‡∏£', '‡∏ì‡∏±‡∏ê‡∏û‡∏•', '‡∏ô‡∏¥‡∏£‡∏±‡∏ô‡∏î‡∏£‡πå', '‡∏Å‡∏¥‡∏ï‡∏ï‡∏¥', '‡∏Å‡∏§‡∏©‡∏ì‡∏∞', '‡∏Ñ‡∏°‡∏™‡∏±‡∏ô', 
    '‡∏à‡∏¥‡∏£‡∏≤‡∏¢‡∏∏', '‡∏à‡∏±‡∏Å‡∏£‡∏û‡∏á‡∏©‡πå', '‡∏ä‡∏¢‡∏û‡∏•', '‡∏ä‡∏≤‡∏ç', '‡∏î‡∏ô‡∏±‡∏¢', '‡∏ó‡∏®‡∏û‡∏£', '‡∏ò‡∏ô‡∏†‡∏±‡∏ó‡∏£', '‡∏ô‡∏û‡∏î‡∏•', '‡∏õ‡∏Å‡∏£‡∏ì‡πå',
    '‡∏†‡∏π‡∏°‡∏¥', '‡∏°‡∏≤‡∏ô‡∏¥‡∏ï', '‡∏¢‡∏®‡∏ß‡∏£‡∏£‡∏ò‡∏ô‡πå', '‡∏£‡∏±‡∏ä‡∏û‡∏•', '‡∏•‡∏¥‡∏Ç‡∏¥‡∏ï', '‡∏ß‡∏™‡∏±‡∏ô‡∏ï‡πå', '‡∏®‡∏∏‡∏†‡∏ä‡∏±‡∏¢', '‡∏™‡∏¥‡∏ó‡∏ò‡∏¥', '‡∏™‡∏∏‡∏ä‡∏≤‡∏ï‡∏¥',
    '‡∏≠‡∏î‡∏¥‡∏®‡∏±‡∏Å‡∏î‡∏¥‡πå', '‡∏≠‡∏†‡∏¥‡∏ä‡∏≤‡∏ï‡∏¥', '‡πÄ‡∏≠‡∏Å‡∏ä‡∏±‡∏¢', '‡πÇ‡∏≠‡∏†‡∏≤‡∏™', '‡∏Å‡∏£‡∏Å‡∏ä', '‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡∏ï‡∏¥', '‡πÄ‡∏à‡∏£‡∏¥‡∏ç', '‡∏ä‡∏±‡∏¢‡∏ß‡∏±‡∏í‡∏ô‡πå',
    '‡∏î‡∏≥‡∏£‡∏á', '‡∏ò‡∏µ‡∏£‡∏∞', '‡∏ô‡∏¥‡∏ï‡∏¥', '‡∏ö‡∏∏‡∏ç‡∏°‡∏µ', '‡∏õ‡∏±‡∏ç‡∏ç‡∏≤', '‡∏û‡∏¥‡∏û‡∏±‡∏í‡∏ô‡πå', '‡∏°‡∏á‡∏Ñ‡∏•', '‡∏¢‡∏∏‡∏ó‡∏ò', '‡∏£‡∏∏‡πà‡∏á‡πÇ‡∏£‡∏à‡∏ô‡πå',
    '‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤', '‡∏®‡∏¥‡∏£‡∏¥', '‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå', '‡∏≠‡∏ô‡∏∏‡∏û‡∏á‡∏©‡πå', '‡πÄ‡∏≠‡∏∑‡πâ‡∏≠‡∏á'
  ],
  female: [
    '‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á', '‡∏™‡∏∏‡∏†‡∏≤‡∏û', '‡∏ß‡∏≤‡∏£‡∏µ', '‡∏ß‡∏≤‡∏™‡∏ô‡∏≤', '‡∏õ‡∏£‡∏≤‡∏ô‡∏µ', '‡∏õ‡∏£‡∏∞‡πÑ‡∏û', '‡∏õ‡∏¥‡∏¢‡∏∞', '‡∏û‡∏¥‡∏°‡∏û‡πå', '‡∏°‡∏≤‡∏•‡∏µ', '‡∏¢‡∏∏‡∏û‡∏¥‡∏ô',
    '‡∏£‡∏±‡∏ä‡∏ô‡∏µ', '‡∏•‡∏±‡∏î‡∏î‡∏≤', '‡∏ß‡∏±‡∏ô‡∏î‡∏µ', '‡∏™‡∏∏‡∏ô‡∏¥‡∏™‡∏≤', '‡∏™‡∏¥‡∏£‡∏¥', '‡∏≠‡∏£‡∏∏‡∏ì‡∏µ', '‡πÅ‡∏™‡∏á‡∏î‡∏≤‡∏ß', '‡∏Å‡∏±‡∏ç‡∏ç‡∏≤', '‡∏Å‡∏∏‡∏•‡∏ì‡∏±‡∏ê', '‡∏à‡∏¥‡∏£‡∏≤',
    '‡∏ä‡∏•‡∏¥‡∏î‡∏≤', '‡∏ì‡∏±‡∏ê‡∏ä‡∏≤', '‡∏ì‡∏¥‡∏ä‡∏≤', '‡∏î‡∏ß‡∏á‡πÉ‡∏à', '‡∏ó‡∏¥‡∏û‡∏¢‡πå', '‡∏ô‡∏á‡∏Ñ‡πå', '‡∏ô‡∏¥‡∏ï‡∏¢‡∏≤', '‡∏ö‡∏∏‡∏©‡∏ö‡∏≤', '‡∏õ‡∏ó‡∏∏‡∏°', '‡∏õ‡∏¢‡∏î‡∏≤',
    '‡∏û‡∏£‡∏£‡∏ì‡∏µ', '‡∏û‡∏¥‡∏°‡∏•‡∏û‡∏£‡∏£‡∏ì', '‡∏°‡∏ì‡∏µ', '‡∏¢‡∏∏‡∏û‡∏≤', '‡∏£‡∏∏‡πà‡∏á‡∏ó‡∏¥‡∏ß‡∏≤', '‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏≤', '‡∏ß‡∏¥‡∏°‡∏•', '‡∏®‡∏¥‡∏£‡∏¥‡∏û‡∏£', '‡∏™‡∏∏‡∏Å‡∏±‡∏ç‡∏ç‡∏≤',
    '‡∏™‡∏∏‡∏†‡∏≤', '‡∏≠‡∏£‡∏ó‡∏±‡∏¢', '‡∏≠‡∏∏‡∏ö‡∏•', '‡πÄ‡∏û‡πá‡∏ç', '‡∏Å‡∏ô‡∏Å‡∏ß‡∏£‡∏£‡∏ì', '‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡∏≤', '‡πÄ‡∏Å‡πá‡∏à‡∏°‡∏ì‡∏µ', '‡∏à‡∏±‡∏ô‡∏ó‡∏ô‡∏≤', '‡∏â‡∏ß‡∏µ‡∏ß‡∏£‡∏£‡∏ì',
    '‡∏î‡∏≤‡∏£‡∏≤', '‡∏ò‡∏¥‡∏î‡∏≤', '‡∏ô‡∏†‡∏≤', '‡∏ö‡∏∏‡∏´‡∏•‡∏±‡∏ô', '‡∏õ‡∏£‡∏≤‡∏ì‡∏µ', '‡∏ú‡∏Å‡∏≤‡∏°‡∏≤‡∏™', '‡∏û‡∏±‡∏ä‡∏£‡∏µ', '‡∏°‡∏ì‡∏µ‡∏£‡∏±‡∏ï‡∏ô‡πå', '‡∏¢‡∏∏‡∏û‡∏≤‡∏û‡∏£',
    '‡∏£‡∏û‡∏µ‡∏û‡∏£‡∏£‡∏ì', '‡∏•‡∏•‡∏¥‡∏ï‡∏≤', '‡∏ß‡∏¥‡∏à‡∏¥‡∏ï‡∏£‡∏≤', '‡∏®‡∏®‡∏¥', '‡∏™‡∏∏‡∏î‡∏≤', '‡∏≠‡∏±‡∏à‡∏â‡∏£‡∏≤'
  ]
};

const thaiLastNames = [
  '‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå', '‡∏®‡∏£‡∏µ', '‡∏™‡∏ß‡∏¢', '‡∏á‡∏≤‡∏°', '‡∏î‡∏µ', '‡∏™‡∏∏‡∏Ç', '‡πÄ‡∏à‡∏£‡∏¥‡∏ç', '‡∏°‡∏±‡πà‡∏á‡∏°‡∏µ', '‡∏£‡∏∏‡πà‡∏á‡πÄ‡∏£‡∏∑‡∏≠‡∏á', '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô',
  '‡πÉ‡∏à‡∏î‡∏µ', '‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå', '‡πÅ‡∏Å‡πâ‡∏ß', '‡∏ó‡∏≠‡∏á', '‡πÄ‡∏á‡∏¥‡∏ô', '‡∏Ç‡∏≤‡∏ß', '‡∏î‡∏≥', '‡πÅ‡∏î‡∏á', '‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß', '‡∏ô‡πâ‡∏≥‡πÄ‡∏á‡∏¥‡∏ô'
];

const occupations = [
  '‡∏ô‡∏±‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ', '‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£', '‡πÅ‡∏û‡∏ó‡∏¢‡πå', '‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•', '‡∏Ñ‡∏£‡∏π', '‡∏ô‡∏±‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏•‡∏≤‡∏î', '‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÄ‡∏°‡∏≠‡∏£‡πå', '‡∏ô‡∏±‡∏Å‡∏Å‡∏é‡∏´‡∏°‡∏≤‡∏¢',
  '‡∏™‡∏ñ‡∏≤‡∏õ‡∏ô‡∏¥‡∏Å', '‡∏ô‡∏±‡∏Å‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö', '‡∏ô‡∏±‡∏Å‡∏Ç‡πà‡∏≤‡∏ß', '‡∏ô‡∏±‡∏Å‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô', '‡∏ä‡πà‡∏≤‡∏á‡∏†‡∏≤‡∏û', '‡∏®‡∏¥‡∏•‡∏õ‡∏¥‡∏ô', '‡∏ô‡∏±‡∏Å‡∏î‡∏ô‡∏ï‡∏£‡∏µ', '‡πÄ‡∏ä‡∏ü'
];

const locations = [
  '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø', '‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà', '‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô', '‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤', '‡∏û‡∏¥‡∏©‡∏ì‡∏∏‡πÇ‡∏•‡∏Å', '‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ', '‡∏™‡∏∏‡∏£‡∏≤‡∏©‡∏é‡∏£‡πå‡∏ò‡∏≤‡∏ô‡∏µ'
];

const interests = [
  '‡∏≠‡πà‡∏≤‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠', '‡∏î‡∏π‡∏´‡∏ô‡∏±‡∏á', '‡∏ü‡∏±‡∏á‡πÄ‡∏û‡∏•‡∏á', '‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß', '‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢', '‡∏ó‡∏≥‡∏≠‡∏≤‡∏´‡∏≤‡∏£', '‡∏ñ‡πà‡∏≤‡∏¢‡∏£‡∏π‡∏õ', '‡∏ß‡∏≤‡∏î‡∏£‡∏π‡∏õ'
];

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏∏‡πà‡∏°‡∏Ñ‡πà‡∏≤
const getRandomElement = (arr) => arr[Math.floor(Math.random() * arr.length)];
const getRandomNumber = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•
const generateEmail = (firstName, lastName, index) => {
  const domains = ['gmail.com', 'hotmail.com', 'yahoo.com'];
  // ‡πÅ‡∏õ‡∏•‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ó‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©
  const englishFirstNames = ['john', 'jane', 'mike', 'sara', 'david', 'lisa', 'tom', 'amy', 'alex', 'emma'];
  const englishLastNames = ['smith', 'brown', 'johnson', 'williams', 'jones', 'garcia', 'miller', 'davis', 'wilson', 'moore'];
  
  const randomFirst = englishFirstNames[Math.floor(Math.random() * englishFirstNames.length)];
  const randomLast = englishLastNames[Math.floor(Math.random() * englishLastNames.length)];
  
  return `${randomFirst}${randomLast}${index}@${getRandomElement(domains)}`;
};

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
const generateUser = (index) => {
  const gender = getRandomElement(['‡∏ä‡∏≤‡∏¢', '‡∏´‡∏ç‡∏¥‡∏á']);
  const firstName = getRandomElement(thaiFirstNames[gender === '‡∏ä‡∏≤‡∏¢' ? 'male' : 'female']);
  const lastName = getRandomElement(thaiLastNames);
  const age = getRandomNumber(18, 60);
  
  return {
    username: `${firstName}${lastName}${index}`,
    email: generateEmail(firstName, lastName, index),
    password: 'password123',
    firstName,
    lastName,
    nickname: firstName,
    phone: `08${Math.floor(Math.random() * 100000000).toString().padStart(8, '0')}`,
    age,
    gender,
    sexualOrientation: getRandomElement(['‡∏ä‡∏≠‡∏ö‡πÄ‡∏û‡∏®‡∏ï‡∏£‡∏á‡∏Ç‡πâ‡∏≤‡∏°', '‡∏ä‡∏≠‡∏ö‡πÄ‡∏û‡∏®‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô', '‡∏ä‡∏≠‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏≠‡∏á‡πÄ‡∏û‡∏®']),
    weight: getRandomNumber(45, 120),
    bio: `‡∏â‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏£‡πà‡∏≤‡πÄ‡∏£‡∏¥‡∏á‡πÅ‡∏•‡∏∞‡∏ä‡∏≠‡∏ö${getRandomElement(interests)}`,
    location: getRandomElement(locations),
    occupation: getRandomElement(occupations),
    education: getRandomElement(['‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡∏ï‡∏£‡∏µ', '‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡πÇ‡∏ó', '‡∏°‡∏±‡∏ò‡∏¢‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤']),
    interests: [getRandomElement(interests), getRandomElement(interests)],
    personalDetails: {
      height: getRandomNumber(150, 190),
      bodyType: getRandomElement(['‡∏ú‡∏≠‡∏°', '‡∏õ‡∏Å‡∏ï‡∏¥', '‡∏≠‡∏ß‡∏ö']),
      exercise: getRandomElement(['‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢', '‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡∏£‡∏≤‡∏ß', '‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏™‡∏°‡πà‡∏≥‡πÄ‡∏™‡∏°‡∏≠']),
      children: getRandomElement(['‡πÑ‡∏°‡πà‡∏°‡∏µ', '‡∏°‡∏µ 1 ‡∏Ñ‡∏ô', '‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏°‡∏µ'])
    },
    lifeStyle: {
      religion: getRandomElement(['‡∏û‡∏∏‡∏ó‡∏ò', '‡∏Ñ‡∏£‡∏¥‡∏™‡∏ï‡πå', '‡πÑ‡∏°‡πà‡∏ô‡∏±‡∏ö‡∏ñ‡∏∑‡∏≠‡∏®‡∏≤‡∏™‡∏ô‡∏≤']),
      zodiac: getRandomElement(['‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°', '‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå', '‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏°', '‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô'])
    },
    role: Math.random() > 0.9 ? 'premium' : 'user',
    status: 'active',
    verified: Math.random() > 0.7
  };
};

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å
const createUsers = async () => {
  try {
    console.log('üîÑ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MongoDB...');
    await mongoose.connect('mongodb+srv://shayetet14:sdg5NrhmPFak8T3y@cluster0.2g7xxjp.mongodb.net/love?retryWrites=true&w=majority&appName=Cluster0');
    console.log('‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MongoDB ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');

    // ‡∏•‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô admin)
    const deleteResult = await User.deleteMany({ role: { $ne: 'admin' } });
    console.log(`üóëÔ∏è  ‡∏•‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏Å‡πà‡∏≤ ${deleteResult.deletedCount} ‡∏Ñ‡∏ô`);

    console.log('üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ 1000 ‡∏Ñ‡∏ô...');
    
    let successCount = 0;
    let errorCount = 0;

    for (let i = 1; i <= 1000; i++) {
      try {
        const userData = generateUser(i);
        const user = new User(userData);
        await user.save();
        successCount++;
        
        if (i % 100 === 0) {
          console.log(`‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß ${successCount} ‡∏Ñ‡∏ô (‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà ${i})`);
        }
      } catch (error) {
        errorCount++;
        console.log(`‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà ${i}: ${error.message}`);
      }
    }

    console.log(`\nüéâ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô! ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ${successCount} ‡∏Ñ‡∏ô, ‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ${errorCount} ‡∏Ñ‡∏ô`);
    
    // ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    const totalUsers = await User.countDocuments();
    const genderStats = await User.aggregate([
      { $group: { _id: '$gender', count: { $sum: 1 } } }
    ]);
    const roleStats = await User.aggregate([
      { $group: { _id: '$role', count: { $sum: 1 } } }
    ]);

    console.log(`\nüìä ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${totalUsers} ‡∏Ñ‡∏ô`);
    genderStats.forEach(stat => {
      console.log(`   ${stat._id}: ${stat.count} ‡∏Ñ‡∏ô`);
    });
    console.log('\nüë• ‡∏™‡∏£‡∏∏‡∏õ‡∏ï‡∏≤‡∏°‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏†‡∏≤‡∏û:');
    roleStats.forEach(stat => {
      console.log(`   ${stat._id}: ${stat.count} ‡∏Ñ‡∏ô`);
    });

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
  } finally {
    await mongoose.disconnect();
    console.log('üîå ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MongoDB');
    process.exit(0);
  }
};

// ‡∏£‡∏±‡∏ô‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå
createUsers();
