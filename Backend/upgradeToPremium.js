const mongoose = require('mongoose');
const User = require('./models/User');

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô Premium
const updateUsersToPremium = async () => {
  try {
    console.log('üîÑ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MongoDB...');
    await mongoose.connect('mongodb+srv://shayetet14:sdg5NrhmPFak8T3y@cluster0.2g7xxjp.mongodb.net/love?retryWrites=true&w=majority&appName=Cluster0');
    console.log('‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MongoDB ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    const totalUsers = await User.countDocuments();
    const currentPremiumUsers = await User.countDocuments({ role: 'premium' });
    const regularUsers = await User.countDocuments({ role: 'user' });
    
    console.log(`üìä ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:`);
    console.log(`   ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${totalUsers} ‡∏Ñ‡∏ô`);
    console.log(`   Premium: ${currentPremiumUsers} ‡∏Ñ‡∏ô`);
    console.log(`   User ‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤: ${regularUsers} ‡∏Ñ‡∏ô`);

    // ‡∏´‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô role 'user' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏°‡∏≤‡∏≠‡∏±‡∏û‡πÄ‡∏Å‡∏£‡∏î‡πÄ‡∏õ‡πá‡∏ô premium
    const usersToUpgrade = await User.find({ 
      role: 'user',
      status: 'active' 
    }).limit(300);

    if (usersToUpgrade.length === 0) {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏û‡πÄ‡∏Å‡∏£‡∏î‡πÑ‡∏î‡πâ');
      return;
    }

    console.log(`üéØ ‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏û‡πÄ‡∏Å‡∏£‡∏î‡πÑ‡∏î‡πâ: ${usersToUpgrade.length} ‡∏Ñ‡∏ô`);

    // ‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ (‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 300 ‡∏Ñ‡∏ô)
    const numberOfUsersToUpgrade = Math.min(300, usersToUpgrade.length);
    const shuffledUsers = usersToUpgrade.sort(() => 0.5 - Math.random());
    const selectedUsers = shuffledUsers.slice(0, numberOfUsersToUpgrade);

    console.log(`üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏≠‡∏±‡∏û‡πÄ‡∏Å‡∏£‡∏î‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ${numberOfUsersToUpgrade} ‡∏Ñ‡∏ô ‡πÄ‡∏õ‡πá‡∏ô Premium...`);

    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô premium
    const userIds = selectedUsers.map(user => user._id);
    
    const updateResult = await User.updateMany(
      { _id: { $in: userIds } },
      { 
        $set: { 
          role: 'premium',
          verified: true // ‡πÉ‡∏´‡πâ premium users ‡πÄ‡∏õ‡πá‡∏ô verified ‡∏î‡πâ‡∏ß‡∏¢
        } 
      }
    );

    console.log(`‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏Å‡∏£‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ${updateResult.modifiedCount} ‡∏Ñ‡∏ô!`);

    // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÉ‡∏´‡∏°‡πà
    const newTotalUsers = await User.countDocuments();
    const newPremiumUsers = await User.countDocuments({ role: 'premium' });
    const newRegularUsers = await User.countDocuments({ role: 'user' });
    const adminUsers = await User.countDocuments({ role: 'admin' });

    console.log(`\nüìä ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏´‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó:`);
    console.log(`   ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${newTotalUsers} ‡∏Ñ‡∏ô`);
    console.log(`   Premium: ${newPremiumUsers} ‡∏Ñ‡∏ô (+${newPremiumUsers - currentPremiumUsers})`);
    console.log(`   User ‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤: ${newRegularUsers} ‡∏Ñ‡∏ô`);
    console.log(`   Admin: ${adminUsers} ‡∏Ñ‡∏ô`);

    // ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏≠‡∏±‡∏û‡πÄ‡∏Å‡∏£‡∏î
    console.log(`\nüåü ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏≠‡∏±‡∏û‡πÄ‡∏Å‡∏£‡∏î‡πÄ‡∏õ‡πá‡∏ô Premium:`);
    selectedUsers.slice(0, 5).forEach((user, index) => {
      console.log(`   ${index + 1}. ${user.firstName} ${user.lastName} (${user.username})`);
    });
    
    if (selectedUsers.length > 5) {
      console.log(`   ... ‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡∏Å ${selectedUsers.length - 5} ‡∏Ñ‡∏ô`);
    }

    console.log(`\n‚ú® ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÄ‡∏Å‡∏£‡∏î‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ!`);
    
  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
  } finally {
    await mongoose.disconnect();
    console.log('üîå ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MongoDB');
    process.exit(0);
  }
};

// ‡∏£‡∏±‡∏ô‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå
updateUsersToPremium();
