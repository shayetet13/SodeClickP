const express = require('express');
const router = express.Router();
const User = require('../models/User');
const { protect } = require('../middleware/auth');

// GET /api/users/discover - ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Discover tab (‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å VIP ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)
router.get('/discover', async (req, res) => {
  try {
    console.log('üîç Fetching VIP users for discover...');
    
    // ‡∏î‡∏∂‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å VIP ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô (‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç)
    
    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏Ç‡∏≠‡∏á‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó
    const roleOrder = ['Platinum', 'Diamond', 'VIP2', 'VIP1', 'VIP', 'Gold', 'Silver'];
    const limit = 16; // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á
    let allUsers = [];
    
    // ‡∏î‡∏∂‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó
    for (const role of roleOrder) {
      if (allUsers.length >= limit) break; // ‡∏´‡∏¢‡∏∏‡∏î‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏£‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏•‡πâ‡∏ß
      
      const remainingSlots = limit - allUsers.length;
      
      const usersOfThisRole = await User.find({
        role: role, // ‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡πÄ‡∏â‡∏û‡∏≤‡∏∞
        verified: true, // ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏µ‡πà verified ‡πÅ‡∏•‡πâ‡∏ß
        status: 'active' // ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏µ‡πà active
      })
      .select('firstName lastName age location occupation address avatar interests verified createdAt role')
      .limit(remainingSlots) // ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠
      .sort({ createdAt: -1 }); // ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
      
      allUsers = allUsers.concat(usersOfThisRole);
      
      console.log(`Found ${usersOfThisRole.length} users with role ${role} (Total so far: ${allUsers.length})`);
    }
    
    console.log(`Found total ${allUsers.length} VIP users for discover in priority order`);

    // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö format ‡∏ó‡∏µ‡πà frontend ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
    const formattedUsers = allUsers.map(user => {
      // ‡∏™‡∏£‡πâ‡∏≤‡∏á avatar URL ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
      let avatarUrl = `http://localhost:5000/uploads/avatar/default.png`;
      if (user.avatar) {
        // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ avatar ‡πÉ‡∏ô database
        if (user.avatar.startsWith('http')) {
          // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô external URL ‡πÅ‡∏•‡πâ‡∏ß (‡πÄ‡∏ä‡πà‡∏ô Unsplash)
          avatarUrl = user.avatar;
        } else if (user.avatar.startsWith('/uploads')) {
          // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô local path ‡∏ó‡∏µ‡πà‡∏°‡∏µ /uploads ‡πÅ‡∏•‡πâ‡∏ß
          avatarUrl = `http://localhost:5000${user.avatar}`;
        } else {
          // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô filename ‡πÄ‡∏â‡∏¢‡πÜ
          avatarUrl = `http://localhost:5000/uploads/avatar/${user.avatar}`;
        }
      }

      // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏õ‡∏•‡∏á role ‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢
      const getRoleName = (role) => {
        const roleNames = {
          'Platinum': 'Platinum',
          'Diamond': 'Diamond', 
          'VIP2': 'VIP 2',
          'VIP1': 'VIP 1',
          'VIP': 'VIP',
          'Gold': 'Gold',
          'Silver': 'Silver'
        };
        return roleNames[role] || role;
      };

      return {
        id: user._id,
        name: `${user.firstName} ${user.lastName}`,
        age: user.age || 25,
        location: user.location || '',
        occupation: user.occupation || '',
        address: user.address || '',
        avatar: avatarUrl,
        interests: user.interests || ['Music', 'Travel'],
        verified: user.verified || false,
        status: "‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå", // ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô dynamic ‡πÑ‡∏î‡πâ
        role: user.role || 'user',
        roleName: getRoleName(user.role)
      };
    });

    res.json({
      success: true,
      data: formattedUsers,
      count: formattedUsers.length
    });

  } catch (error) {
    console.error('Error fetching discover users:', error);
    res.status(500).json({
      success: false,
      message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ',
      error: error.message
    });
  }
});

module.exports = router;
