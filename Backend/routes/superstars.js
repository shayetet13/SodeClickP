const express = require('express');
const router = express.Router();
const User = require('../models/User');
const { protect } = require('../middleware/auth');

// GET /api/superstars - ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ã‡∏∏‡∏õ‡∏ï‡∏≤‡∏£‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÇ‡∏´‡∏ß‡∏ï‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î (Real data only)
router.get('/', async (req, res) => {
  try {
    console.log('üåü Fetching superstars based on real voting data...');
    
    // ‡∏î‡∏∂‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÇ‡∏´‡∏ß‡∏ï‡∏à‡∏£‡∏¥‡∏á ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÇ‡∏´‡∏ß‡∏ï‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
    const superstarsData = await User.find({
      verified: true, // ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏µ‡πà verified ‡πÅ‡∏•‡πâ‡∏ß
      status: 'active', // ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏µ‡πà active
      'votingStats.totalVotes': { $gt: 0 } // ‡∏°‡∏µ‡πÇ‡∏´‡∏ß‡∏ï‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 0
    })
    .select('firstName lastName age location occupation address avatar interests verified createdAt role votingStats')
    .sort({ 
      'votingStats.totalVotes': -1, // ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡πÇ‡∏´‡∏ß‡∏ï‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
      'votingStats.totalStars': -1, // ‡∏ñ‡πâ‡∏≤‡πÇ‡∏´‡∏ß‡∏ï‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ô ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏î‡∏≤‡∏ß
      'votingStats.totalHearts': -1 // ‡∏ñ‡πâ‡∏≤‡∏î‡∏≤‡∏ß‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ô ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏´‡∏±‡∏ß‡πÉ‡∏à
    })
    .limit(20); // ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡πÅ‡∏Ñ‡πà 20 ‡∏Ñ‡∏ô
    
    console.log(`Found ${superstarsData.length} superstars with real voting data`);
    
    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á ‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö array ‡∏ß‡πà‡∏≤‡∏á
    if (superstarsData.length === 0) {
      console.log('üìä No users with voting data found - returning empty array');
      return res.status(200).json({
        success: true,
        data: [],
        message: '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ã‡∏∏‡∏õ‡∏ï‡∏≤‡∏£‡πå‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö - ‡∏£‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏ß‡∏ï‡∏à‡∏£‡∏¥‡∏á'
      });
    }
    
    // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà frontend ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ (‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)
    const superstars = superstarsData.map((user, index) => {
      const votingStats = user.votingStats || {};
      
      return {
        id: user._id,
        name: `${user.firstName} ${user.lastName}`,
        age: user.age || 25,
        location: user.location || '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø',
        avatar: user.avatar || null,
        membershipLevel: `${user.role} Member`,
        membershipColor: getMembershipColor(user.role),
        // ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏≤‡∏Å votingStats
        stars: votingStats.totalStars || 0,
        votes: votingStats.totalVotes || 0,
        hearts: votingStats.totalHearts || 0,
        rank: index + 1, // ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö
        verified: user.verified || false,
        interests: user.interests || ['‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß', '‡∏≠‡∏≤‡∏´‡∏≤‡∏£', '‡∏î‡∏ô‡∏ï‡∏£‡∏µ'],
        status: '‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå' // ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå (‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï‡∏≠‡∏≤‡∏à‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å real-time data)
      };
    });
    
    res.status(200).json({
      success: true,
      data: superstars,
      message: `Found ${superstars.length} superstars with real voting data`
    });
    
  } catch (error) {
    console.error('‚ùå Error fetching superstars:', error);
    res.status(500).json({
      success: false,
      message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡∏∏‡∏õ‡∏ï‡∏≤‡∏£‡πå',
      error: error.message
    });
  }
});

// POST /api/superstars/:userId/vote - ‡πÇ‡∏´‡∏ß‡∏ï‡πÉ‡∏´‡πâ‡∏ã‡∏∏‡∏õ‡∏ï‡∏≤‡∏£‡πå
router.post('/:userId/vote', protect, async (req, res) => {
  try {
    const { userId } = req.params;
    const { voteType } = req.body; // 'star', 'vote', 'heart'
    const voterId = req.user.id;
    
    console.log(`üó≥Ô∏è User ${voterId} voting ${voteType} for user ${userId}`);
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏ß‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á
    if (userId === voterId) {
      return res.status(400).json({
        success: false,
        message: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏ß‡∏ï‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ'
      });
    }
    
    // ‡∏´‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÇ‡∏´‡∏ß‡∏ï
    const targetUser = await User.findById(userId);
    if (!targetUser) {
      return res.status(404).json({
        success: false,
        message: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏ß‡∏ï'
      });
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÇ‡∏´‡∏ß‡∏ï
    if (!['star', 'vote', 'heart'].includes(voteType)) {
      return res.status(400).json({
        success: false,
        message: '‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÇ‡∏´‡∏ß‡∏ï‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (star, vote, heart)'
      });
    }
    
    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏´‡∏ß‡∏ï
    if (!targetUser.votingStats) {
      targetUser.votingStats = {
        totalVotes: 0,
        totalStars: 0,
        totalHearts: 0,
        averageRating: 0
      };
    }
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏´‡∏ß‡∏ï‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó
    targetUser.votingStats.totalVotes += 1;
    if (voteType === 'star') {
      targetUser.votingStats.totalStars += 1;
    } else if (voteType === 'heart') {
      targetUser.votingStats.totalHearts += 1;
    }
    
    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÇ‡∏´‡∏ß‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
    targetUser.votingStats.lastVoteDate = new Date();
    
    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    await targetUser.save();
    
    console.log(`‚úÖ Vote recorded: ${voteType} for user ${userId}. New stats:`, targetUser.votingStats);
    
    res.status(200).json({
      success: true,
      message: `‡πÇ‡∏´‡∏ß‡∏ï ${voteType} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`,
      data: {
        userId: userId,
        voteType: voteType,
        newStats: targetUser.votingStats
      }
    });
    
  } catch (error) {
    console.error('‚ùå Error recording vote:', error);
    res.status(500).json({
      success: false,
      message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÇ‡∏´‡∏ß‡∏ï',
      error: error.message
    });
  }
});

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏µ‡∏ï‡∏≤‡∏°‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
function getMembershipColor(role) {
  const colors = {
    'Platinum': 'cyan',
    'Diamond': 'sky',
    'VIP2': 'indigo',
    'VIP1': 'pink',
    'VIP': 'purple',
    'Gold': 'amber',
    'Silver': 'gray'
  };
  return colors[role] || 'gray';
}

module.exports = router; 